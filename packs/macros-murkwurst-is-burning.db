{"_id":"6taJONoQAUrLLiNk","name":"d10 Occult Treasures","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'd10 Occult Treasures');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.pxPS5NS2XGhkPlmZ"},"cf":{"id":"temp_da8uhx1elop","color":"#000000"}}}
{"_id":"7zJ9S9ZkE4MqnjZE","name":"Murkwürst is burning - Crypt Reset","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n    let table = game.tables.getName(\"Crypt - Rooms\");\n    if (table) {\n        await table.reset();\n    }\n\n    table = game.tables.getName(\"Crypt - Writing\");\n    if (table) {\n        await table.reset();\n    }\n    ui.notifications.info(\"Crypt - Writing Reset\");\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.7OqlejycJ1JVA5yx"}}}
{"_id":"D3GL812mDdVwFb58","name":"Murkwürst is burning - Crypt - Tomb Loot","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Crypt - Tomb Loots');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.FJC9EVlLsOc5rp9K"}}}
{"_id":"G4CyQkxZBkDS5NI2","name":"Murkwürst is burning - Create impassable","type":"script","author":"4CrQgqZ7hzyY3FVg","img":"icons/svg/dice-target.svg","scope":"global","command":"const controlledToken = game.canvas.tokens.controlled.pop();\nif (!controlledToken) {\n   ui.notifications.warn(\"You need a token selected\");\n   return;\n}\n\nconst hexPolygon = canvas.grid.grid.getPolygon(controlledToken.x, controlledToken.y)\n\nconst points = hexPolygon.reduce((result, value, index) => {\n if (index % 2 === 0) {\n   result.push(hexPolygon.slice(index, index + 2));\n }\n return result;\n}, []);\n\nconst lineDistance = (p1, p2) => Math.hypot(p2.x - p1.x, p2.y - p1.y);\n\nconst getAngle = (p1, p2) => Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n\nconst getPoints = ([p1 , p2]) => (\n  [{x: points[p1][0], y: points[p1][1]}, {x: points[p2][0], y: points[p2][1]}]\n);\n\nconst midPoint = (p1, p2) => ({x: (p1.x + p2.x) / 2, y: (p1.y + p2.y) / 2})\n\nconst lines = [\n    [0, 1], [0, 2],\n    [1, 2], [1, 3],\n    [2, 3], [2, 4],\n    [3, 4], [3, 5],\n    [4, 5], [4, 6],\n    [5, 6], [5, 1]\n];\n\nconst image = \"/modules/murkwurst-is-burning/images/tiles/wall-of-fire.webm\";\nconst texture = await loadTexture(image);\n\nlet currentTile = null;\n\nconst drawTile = async (line) => {\n\n  if (currentTile) destroyTile();\n\n  const [p1, p2] = getPoints(lines[line]);\n  const mid = midPoint(p1, p2);\n  const width = lineDistance(p1, p2);\n\n  const tileData = {\n    id: 'test',\n    img: image,\n    width: texture.width,\n    height: texture.height,\n    x: mid.x - (width / 2),\n    y: mid.y - (texture.height / 2),\n    rotation: getAngle(p1, p2),\n    width: width\n  };\n\n  currentTile = (await canvas.scene.createEmbeddedDocuments( \"Tile\", [ tileData ] ))[0];\n}\n\nconst destroyTile = () => currentTile.delete();\n\nconst rotateTile = () => {\n  currentIndex += 1;\n  if (currentIndex >= lines.length) {\n    currentIndex = 0;\n  }\n  drawTile(currentIndex);\n}\n\nlet currentIndex = 0;\nawait drawTile(currentIndex);\n\n\nnew Dialog({\n  title: 'Create impassable',\n  content: `<p><button id=\"rotate\">Rotate Tile</button></p>`,\n  render: html => {\n   html.find('#rotate').on('click', () => rotateTile());\n  },\n  buttons:{\n    apply: {\n      label: 'Ok',\n    },\n    cancel: {\n      label: 'Cancel',\n      callback: () => destroyTile() \n    }\n  },   \n  default:' cancel'\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"4CrQgqZ7hzyY3FVg":3},"flags":{"core":{"sourceId":"Macro.TgvAXpBOlrz7Szvg"}}}
{"name":"d66 items you can find on a corpse","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'd66 items you can find on a corpse');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.hTQKnxL8SkiX9sYt"}},"_id":"RMQ4A6QHYMX8BMiV"}
{"_id":"UsoLDdUmtWVOukSv","name":"Murkwürst is burning - Hex","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Hex');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.lsiZ51ZrrPkejrlT"}}}
{"_id":"WYLyBQFWb9d5xKCY","name":"Murkwürst is burning - Rumors","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Rumors');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.kG0pFGyXlNJHyJV6"}}}
{"_id":"XTWffg6GrmMD8hGm","name":"Murkwürst is burning - Crypt - Rooms","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet table = game.tables.getName(\"Crypt - Rooms\");\nif (!table) {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let tmp = content.find(i => i.name === 'Crypt - Rooms');\n   table = await game.tables.importFromCompendium(pack , tmp.id);\n}\nawait table.draw({rollMode: \"blindroll\"});\n})();\n\n(async () => {\nlet table = game.tables.getName(\"Crypt - Writing\");\nif (!table) {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let tmp = content.find(i => i.name === 'Crypt - Writing');\n   table = await game.tables.importFromCompendium(pack , tmp.id);\n}\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.nGLu10YcRAJwrFqV"}}}
{"_id":"bzA95bnl6aviUBVQ","name":"Murkwürst is burning - Houses","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Houses');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0ZEoCgJmJY22BFJB"}}}
{"_id":"l7pCUpchdXjZ15Bx","name":"Murkwürst is burning - Loots","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Loots');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.dEdsq7jmbs5JW18x"}}}
{"_id":"sxCCzE8LDdyRCTUd","name":"Reaction","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Reaction');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.ohito90o3zFYxQwM"},"cf":{"id":"temp_da8uhx1elop","color":"#000000"}}}
{"_id":"l7pCUpchdXjZ15Bx","name":"Murkwürst is burning - Village Main Loots","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Village Main Loots');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.dEdsq7jmbs5JW18x"}}}
{"_id":"l7pCUpchdXjZ15Bx","name":"Murkwürst is burning - Main Loots","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Main Loots');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.dEdsq7jmbs5JW18x"}}}
{"_id":"UsoLDdUmtWVOukSv","name":"Murkwürst is burning - Village - Hex","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Village - Hex');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.lsiZ51ZrrPkejrlT"}}}
{"_id":"l7pCUpchdXjZ15Bx","name":"Murkwürst is burning - Village - Main Loots","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Village - Main Loots');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.dEdsq7jmbs5JW18x"}}}
{"_id":"bzA95bnl6aviUBVQ","name":"Murkwürst is burning - Village - Houses","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Village - Houses');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0ZEoCgJmJY22BFJB"}}}
{"_id":"G4CyQkxZBkDS5NI2","name":"Murkwürst is burning - Village - Create impassable","type":"script","author":"4CrQgqZ7hzyY3FVg","img":"icons/svg/dice-target.svg","scope":"global","command":"const controlledToken = game.canvas.tokens.controlled.pop();\nif (!controlledToken) {\n   ui.notifications.warn(\"You need a token selected\");\n   return;\n}\n\nconst hexPolygon = canvas.grid.grid.getPolygon(controlledToken.x, controlledToken.y)\n\nconst points = hexPolygon.reduce((result, value, index) => {\n if (index % 2 === 0) {\n   result.push(hexPolygon.slice(index, index + 2));\n }\n return result;\n}, []);\n\nconst lineDistance = (p1, p2) => Math.hypot(p2.x - p1.x, p2.y - p1.y);\n\nconst getAngle = (p1, p2) => Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n\nconst getPoints = ([p1 , p2]) => (\n  [{x: points[p1][0], y: points[p1][1]}, {x: points[p2][0], y: points[p2][1]}]\n);\n\nconst midPoint = (p1, p2) => ({x: (p1.x + p2.x) / 2, y: (p1.y + p2.y) / 2})\n\nconst lines = [\n    [0, 1], [0, 2],\n    [1, 2], [1, 3],\n    [2, 3], [2, 4],\n    [3, 4], [3, 5],\n    [4, 5], [4, 6],\n    [5, 6], [5, 1]\n];\n\nconst image = \"/modules/murkwurst-is-burning/images/tiles/wall-of-fire.webm\";\nconst texture = await loadTexture(image);\n\nlet currentTile = null;\n\nconst drawTile = async (line) => {\n\n  if (currentTile) destroyTile();\n\n  const [p1, p2] = getPoints(lines[line]);\n  const mid = midPoint(p1, p2);\n  const width = lineDistance(p1, p2);\n\n  const tileData = {\n    id: 'test',\n    img: image,\n    width: texture.width,\n    height: texture.height,\n    x: mid.x - (width / 2),\n    y: mid.y - (texture.height / 2),\n    rotation: getAngle(p1, p2),\n    width: width\n  };\n\n  currentTile = (await canvas.scene.createEmbeddedDocuments( \"Tile\", [ tileData ] ))[0];\n}\n\nconst destroyTile = () => currentTile.delete();\n\nconst rotateTile = () => {\n  currentIndex += 1;\n  if (currentIndex >= lines.length) {\n    currentIndex = 0;\n  }\n  drawTile(currentIndex);\n}\n\nlet currentIndex = 0;\nawait drawTile(currentIndex);\n\n\nnew Dialog({\n  title: 'Create impassable',\n  content: `<p><button id=\"rotate\">Rotate Tile</button></p>`,\n  render: html => {\n   html.find('#rotate').on('click', () => rotateTile());\n  },\n  buttons:{\n    apply: {\n      label: 'Ok',\n    },\n    cancel: {\n      label: 'Cancel',\n      callback: () => destroyTile() \n    }\n  },   \n  default:' cancel'\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"4CrQgqZ7hzyY3FVg":3},"flags":{"core":{"sourceId":"Macro.TgvAXpBOlrz7Szvg"}}}
{"_id":"l7pCUpchdXjZ15Bx","name":"Murkwürst is burning - Village - Main Loot","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Village - Main Loot');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.dEdsq7jmbs5JW18x"}}}
{"_id":"D3GL812mDdVwFb58","name":"Murkwürst is burning - Crypt - Tomb Loot","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\nlet content = await pack.getDocuments();\nlet table = content.find(i => i.name === 'Crypt - Tomb Loot');\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.FJC9EVlLsOc5rp9K"}}}
{"_id":"XTWffg6GrmMD8hGm","name":"Murkwürst is burning - Crypt - Rooms","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet table = game.tables.getName(\"Crypt - Rooms\");\nif (!table) {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let tmp = content.find(i => i.name === 'Crypt - Rooms');\n   table = await game.tables.importFromCompendium(pack , tmp.id);\n}\nawait table.draw({rollMode: \"blindroll\"});\n})();\n\n(async () => {\nlet table = game.tables.getName(\"Crypt - Writing\");\nif (!table) {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let tmp = content.find(i => i.name === 'Crypt - Room - Writing');\n   table = await game.tables.importFromCompendium(pack , tmp.id);\n}\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.nGLu10YcRAJwrFqV"}}}
{"_id":"XTWffg6GrmMD8hGm","name":"Murkwürst is burning - Crypt - Rooms","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\nlet table = game.tables.getName(\"Crypt - Rooms\");\nif (!table) {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let tmp = content.find(i => i.name === 'Crypt - Rooms');\n   table = await game.tables.importFromCompendium(pack , tmp.id);\n}\nawait table.draw({rollMode: \"blindroll\"});\n})();\n\n(async () => {\nlet table = game.tables.getName(\"Crypt - Writing\");\nif (!table) {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let tmp = content.find(i => i.name === 'Crypt - Room Writing');\n   table = await game.tables.importFromCompendium(pack , tmp.id);\n}\nawait table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.nGLu10YcRAJwrFqV"}}}
{"_id":"XTWffg6GrmMD8hGm","name":"Murkwürst is burning - Crypt - Rooms","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let table = content.find(i => i.name === 'Crypt - Rooms');\n   await table.draw({rollMode: \"blindroll\"});\n})();\n\n(async () => {\n   let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n   let content = await pack.getDocuments();\n   let table = content.find(i => i.name === 'Crypt - Room Writing');\n   await table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.nGLu10YcRAJwrFqV"}}}
{"_id":"XTWffg6GrmMD8hGm","name":"Murkwürst is burning - Crypt - Rooms","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n   let table = game.tables.getName(\"Crypt - Rooms\")\n   if (!table) {\n      let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n      let content = await pack.getDocuments();\n      let tmp = content.find(i => i.name === 'Crypt - Rooms');\n      table = await game.tables.importFromCompendium(pack , tmp.id)\n   }\n   await table.draw({rollMode: \"blindroll\"});\n})();\n\n(async () => {\n   let table = game.tables.getName(\"Crypt - Rooms Writing\")\n   if (!table) {\n      let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n      let content = await pack.getDocuments();\n      let tmp = content.find(i => i.name === 'Crypt - Rooms Writing');\n      table = await game.tables.importFromCompendium(pack , tmp.id)\n   }\n   await table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.nGLu10YcRAJwrFqV"}}}
{"_id":"7zJ9S9ZkE4MqnjZE","name":"Murkwürst is burning - Crypt Reset","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n    let table = game.tables.getName(\"Crypt - Rooms\");\n    if (table) {\n        await table.reset();\n    }\n\n    table = game.tables.getName(\"Crypt - Room Writing\");\n    if (table) {\n        await table.reset();\n    }\n    ui.notifications.info(\"Crypt - Writing Reset\");\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.7OqlejycJ1JVA5yx"}}}
{"_id":"XTWffg6GrmMD8hGm","name":"Murkwürst is burning - Crypt - Rooms","type":"script","author":"TQ9OKSWS6QNGM02V","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n   let table = game.tables.getName(\"Crypt - Rooms\")\n   if (!table) {\n      let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n      let content = await pack.getDocuments();\n      let tmp = content.find(i => i.name === 'Crypt - Rooms');\n      table = await game.tables.importFromCompendium(pack , tmp.id)\n   }\n   await table.draw({rollMode: \"blindroll\"});\n})();\n\n(async () => {\n   let table = game.tables.getName(\"Crypt - Room Writing\")\n   if (!table) {\n      let pack = game.packs.get('murkwurst-is-burning.tables-murkwurst-is-burning');\n      let content = await pack.getDocuments();\n      let tmp = content.find(i => i.name === 'Crypt - Room Writing');\n      table = await game.tables.importFromCompendium(pack , tmp.id)\n   }\n   await table.draw({rollMode: \"blindroll\"});\n})();","folder":null,"sort":0,"permission":{"default":0,"TQ9OKSWS6QNGM02V":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.nGLu10YcRAJwrFqV"}}}
